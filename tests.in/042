# The usual {S, K, I} basis.
# Nonsensical abstraction algorithm trying to trigger code
# in aho_corasick.c
rule: I 1 -> 1
rule: K 1 2 -> 1
rule: S 1 2 3 -> 1 3 (2 3)
#
abstraction: [_] S K (S (S (S (S (S S S) (S S)) _) _) (S _ S)) -> K I
abstraction: [_] (I I I I I I I I I I S) (I I I I I K) (S (S K *) *) -> S K
abstraction: [_] S K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K (K K))))))))))))))))))))))))))))))))) -> K I
abstraction
