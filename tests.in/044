# This is 8 of John Tromp's 9-rule abstraction algorithm, exercizing the parts
# that make it different from H&S Rule 2.18 (abcf) abstraction.
rule: I 1 -> 1
rule: K 1 2 -> 1
rule: S 1 2 3 -> 1 3 (2 3)
abstraction: [_] S K * -> S K
abstraction: [_] *- -> K 1
abstraction: [_] *- _ -> 1
abstraction: [_] _ -> I
abstraction: [_] _ * _ -> [_] S S K _ 2
abstraction: [_] (*! (*! *)) -> [_] (S (K 1) 2 3)
abstraction: [_] (*! * *!) -> [_] (S 1 (K 3) 2)
abstraction: [_] * * -> S ([_] 1) ([_] 2)
[x] S K S
[x] S K (S S)
[x] S K m
[x] S K (m n)
[x] S K x
[x] S K (x n)
[x] S K (x S)
[x] S K (S x)
[x] M
[x] M N
[x] M N L
[x] S
[x] S S
[x] (S K S)
[x] M x
[x] M N x
[x] M N L x
[x] S x
[x] S S x
[x] (S K S) x
[x] x
[x] (S (K (m x)))
([x] (S (K (m x)))) x
[x] x x x
[x] S K x
[x] S K z
[x] S K I
[x] S x S
[x] S x (S S)
