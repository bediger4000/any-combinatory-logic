rule: B 1 2 3 -> 1 (2 3)
rule: C 1 2 3 -> 1 3 2
rule: W 1 2 -> 1 2 2
rule: K 1 2 -> 1
abstraction: [_] *- -> K 1
abstraction: [_] _ -> W K
abstraction: [_] *- _ -> 1
abstraction: [_] *- *+ -> B 1 ([_]2)
abstraction: [_] *+ *- -> C ([_]1) 2
abstraction: [_] * * -> W (B (C ([_]1)) ([_]2))
def a B (B W) (B B C)
def b B
load tests.in/abstractions
